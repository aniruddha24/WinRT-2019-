#pragma once

class IMyMath :public IDispatch
{
public:
	virtual HRESULT __stdcall SumOfTwoIntegers(int, int, int *) = 0;

	virtual HRESULT __stdcall SubtractionOfTwoIntegers(int, int, int *) = 0;
};

/*
// {F81E42BF-1169-495A-8870-8AD84A67E7ED}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>,
0xf81e42bf, 0x1169, 0x495a, 0x88, 0x70, 0x8a, 0xd8, 0x4a, 0x67, 0xe7, 0xed);
*/
const CLSID CLSID_MyMath = { 0xf81e42bf, 0x1169, 0x495a, 0x88, 0x70, 0x8a, 0xd8, 0x4a, 0x67, 0xe7, 0xed };

/*
// {A3A16F43-E7BD-4DBC-8AB4-C80E20198A91}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>,
0xa3a16f43, 0xe7bd, 0x4dbc, 0x8a, 0xb4, 0xc8, 0xe, 0x20, 0x19, 0x8a, 0x91);
*/
const IID IID_IMyMath = { 0xa3a16f43, 0xe7bd, 0x4dbc, 0x8a, 0xb4, 0xc8, 0xe, 0x20, 0x19, 0x8a, 0x91 };



/*
LIBID of Type Library
// {23D73092-83DC-44BF-94D0-8C23721388DB}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>, 
0x23d73092, 0x83dc, 0x44bf, 0x94, 0xd0, 0x8c, 0x23, 0x72, 0x13, 0x88, 0xdb);

*/