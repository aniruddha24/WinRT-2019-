#pragma once
class IMultiplication :public IUnknown
{
public:
	virtual HRESULT __stdcall MultiplicationOfTwoIntegers(int, int, int *) = 0;
};

class IDivision : public IUnknown
{
public:
	virtual HRESULT __stdcall DivisionOfTwoIntegers(int, int, int *) = 0;
};

/*
// {251E783D-CBD2-4A6E-9C6C-58B185014A04}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>,
0x251e783d, 0xcbd2, 0x4a6e, 0x9c, 0x6c, 0x58, 0xb1, 0x85, 0x1, 0x4a, 0x4);

*/
const CLSID CLSID_MultiplicationDivision = { 0x251e783d, 0xcbd2, 0x4a6e, 0x9c, 0x6c, 0x58, 0xb1, 0x85, 0x1, 0x4a, 0x4 };

/*
// {D8C72972-28EB-4066-898D-D0FCFBBC30FE}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>,
0xd8c72972, 0x28eb, 0x4066, 0x89, 0x8d, 0xd0, 0xfc, 0xfb, 0xbc, 0x30, 0xfe);

*/
const IID IID_IMultiplication = { 0xd8c72972, 0x28eb, 0x4066, 0x89, 0x8d, 0xd0, 0xfc, 0xfb, 0xbc, 0x30, 0xfe };

/*
// {E9C8A5DD-911C-4DB7-A561-50AECE37C16D}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>,
0xe9c8a5dd, 0x911c, 0x4db7, 0xa5, 0x61, 0x50, 0xae, 0xce, 0x37, 0xc1, 0x6d);
*/
const IID IID_IDivision = { 0xe9c8a5dd, 0x911c, 0x4db7, 0xa5, 0x61, 0x50, 0xae, 0xce, 0x37, 0xc1, 0x6d };

